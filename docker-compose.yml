version: '3.8'

name: online-contest-background

services:
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_DB: contest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 05052001
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./backend/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    networks:
      - online-contest-net
    restart: unless-stopped

  mongodb:
      image: mongodb/mongodb-community-server:7.0-ubi9
      container_name: mongo-db
      ports:
        - "27017:27017"
      volumes:
        - mongodb-data:/data/db
        - ./mongo-init:/docker-entrypoint-initdb.d  # Optional initialization scripts
      networks:
        - online-contest-net
      restart: unless-stopped
      command: mongod --noauth

  keycloak:
    image: keycloak/keycloak:latest
    ports:
      - "8086:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
    volumes:
      - ./import:/opt/keycloak/data/import
    command: start-dev --import-realm
    networks:
      - online-contest-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana
    ports:
      - 9200:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=tad
    networks:
      - online-contest-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./backend/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9000:9090"
    networks:
      - online-contest-net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    ports:
      - 9300:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro # Add only if you have your containers running on Mac
    networks:
      - online-contest-net

volumes:
  postgres-data:  # Volume for PostgreSQL
    driver: local
  mongodb-data:   # Volume for MongoDB
    driver: local
  prometheus_data: {}

networks:
  online-contest-net:
    name: online-contest-net