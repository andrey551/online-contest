services:
  course:
    build: ./course
    container_name: course
    ports:
      - "8082:8082"   # Spring Boot HTTP
#      - "9090:9090"   # gRPC
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DOTENV_PATH=.env
    networks:
      - online-contest-net

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET=vNGggqSKmFqmkq9RsOQ4hn3tSkQIPhnl
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://keycloak:8080/realms/contest
    networks:
      - online-contest-net

  runner:
    build:
      context: ./runner
      dockerfile: Dockerfile
    container_name: runner
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - shared_volume:/shared
    ports:
      - "8084:8000"    # FastAPI
#      - "50051:50051"    # gRPC
    environment:
      - MONGO_URI=mongodb://mongo-db:27017
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - online-contest-net

  submission:
    build: ./submission
    container_name: submission
    ports:
      - "8083:8083"   # Spring Boot HTTP
#      - "9093:9093"   # gRPC
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DOTENV_PATH=.env
    networks:
      - online-contest-net

  tester:
    build:
      context: ./tester
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: tester
    ports:
      - "8085:8000"    # FastAPI
    environment:
      - MONGO_URI=mongodb://mongo-db:27017
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - online-contest-net

  user:
    build: ./user
    container_name: user
    ports:
      - "8081:8081"   # Spring Boot HTTP
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DOTENV_PATH=.env
    networks:
      - online-contest-net

  file-service:
    build: ./file
    container_name: file
    ports:
      - "8087:8087"
      - "9092:9092"
    volumes:
      - ./file/secret-file.json:/app/config/gcs-key.json:ro  # Read-only mount
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - DOTENV_PATH=.env
      - GOOGLE_APPLICATION_CREDENTIALS=/app/config/gcs-key.json  # Standard GCP env var
      - SPRING_CLOUD_GCP_CREDENTIALS_LOCATION=file:/app/config/gcs-key.json  # For Spring Cloud GCP
    networks:
      - online-contest-net

volumes:
  shared_volume:  # Named volume declaration

networks:
  online-contest-net:
    external: true
