# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import app.generated.submission_pb2 as submission__pb2
import grpc

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION,
                                                    GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in submission_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SubmissionTaskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleSubmissionTask = channel.unary_unary(
                '/SubmissionTaskService/HandleSubmissionTask',
                request_serializer=submission__pb2.SubmissionTaskRequest
                                                  .SerializeToString,
                response_deserializer=submission__pb2.SubmissionTaskResponse
                                                     .FromString,
                _registered_method=True)
        self.HandleCreateSubmission = channel.unary_unary(
                '/SubmissionTaskService/HandleCreateSubmission',
                request_serializer=submission__pb2.CreateSubmissionRequest
                                                  .SerializeToString,
                response_deserializer=submission__pb2.CreateSubmissionResponse
                                                     .FromString,
                _registered_method=True)


class SubmissionTaskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def HandleSubmissionTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleCreateSubmission(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubmissionTaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleSubmissionTask': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleSubmissionTask,
                    request_deserializer=submission__pb2.SubmissionTaskRequest
                                                        .FromString,
                    response_serializer=submission__pb2.SubmissionTaskResponse
                                                       .SerializeToString,
            ),
            'HandleCreateSubmission': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleCreateSubmission,
                    request_deserializer=submission__pb2.CreateSubmissionRequest
                                                        .FromString,
                    response_serializer=submission__pb2.CreateSubmissionResponse
                                                       .SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SubmissionTaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('SubmissionTaskService',
                                          rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SubmissionTaskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def HandleSubmissionTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SubmissionTaskService/HandleSubmissionTask',
            submission__pb2.SubmissionTaskRequest.SerializeToString,
            submission__pb2.SubmissionTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HandleCreateSubmission(request,
                                target,
                                options=(),
                                channel_credentials=None,
                                call_credentials=None,
                                insecure=False,
                                compression=None,
                                wait_for_ready=None,
                                timeout=None,
                                metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SubmissionTaskService/HandleCreateSubmission',
            submission__pb2.CreateSubmissionRequest.SerializeToString,
            submission__pb2.CreateSubmissionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
